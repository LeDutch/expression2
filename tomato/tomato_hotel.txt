@name Tomato Hotel
@inputs
@outputs [Room1 Room2 Room3 Room4 Room5 Room6]:entity
@persist Charge:entity
@persist [I Rooms RoomSelected Togglepin Notify]:number [Prices Residents RoomNames Pins]:array
@trigger 

###################################################
#Coded by Bob Tomato, any changes or reqs /pm me :)
###################################################

#Ease of use functions - for future projects
###################################################

Cursor = EGP:egpCursor(User) #Defines Cursor

if (first() | dupefinished() | ~EGP) {
    #include "library/tomato_lib"
    
    I = 0
    Rooms = 1
    Prices = array()
    Residents = array()
    RoomNames = array()
    Pins = array()
    Togglepin = 0
    Charge = findPlayerBySteamID("STEAM_0:0:67228851")
    RoomSelected = 0
    Prefix = "LANDLORD"
    Notify = 0
    Owner = owner()
    
    function addEntity(Entity:entity, Num) {
        ioSetOutput("Room"+Num, Entity)
    }
    
    function removeEntity(Num) {
        ioSetOutput("Room"+Num, owner())
    }
    
    for (I = 1,6){
        Prices:pushNumber(500)
        Residents:pushEntity(noentity())
        RoomNames:pushString("Room "+I)
        Pins:pushString("110"+I)
        removeEntity(I)
    }
    
    function updateRoom() {
        if(Rooms < I) {
            EGP:egpRemove(Elements:get("Room "+I))
            EGP:egpRemove(Elements:get("Sleep"+I))
            EGP:egpRemove(Elements:get("Price"+I))
            EGP:egpRemove(Elements:get("BuyBox"+I))
            EGP:egpRemove(Elements:get("Row"+I))
            EGP:egpRemove(Elements:get("Buy"+I))
            I--
        }
        else {
            I++
            createText("Room "+I, size(22), color(Dark), coords(vec2(20,105+I*50)))
            createText("Sleep"+I, size(22), color(Dark), align(1), coords(vec2(280,105+I*50)))
            createText("Price"+I, size(22), color(Dark), align(1), coords(vec2(360,105+I*50)))
            createBox("BuyBox"+I,size(vec2(92,50)), color(Green), coords(vec2(410,90+I*50))) 
            createBox("Row"+I,size(vec2(ScreenXY-20,1)), color(Light), coords(vec2(10,140+I*50)))
            createText("Buy"+I, size(18), color(White), align(1), coords(vec2(460,105+I*50)))
            EGP:egpSetText(Elements:get("Price"+I),"$"+toString(Prices[I, number]))
            EGP:egpSetText(Elements:get("Sleep"+I),"2")
            EGP:egpSetText(Elements:get("Buy"+I),"Purchase")
            
        }
        EGP:egpPos(Elements:get("1 Night = 30 mins"),coords(vec2(10,200+(Rooms-1)*50)))
        EGP:egpSize(Elements:get("TableBackground"),size(vec2(ScreenXY-20,50+(Rooms-1)*50)))
        EGP:egpSize(Elements:get("Column1"),size(vec2(1,90+(Rooms-1)*50)))
        EGP:egpSize(Elements:get("Column2"),size(vec2(1,90+(Rooms-1)*50)))
        EGP:egpSize(Elements:get("Column3"),size(vec2(1,90+(Rooms-1)*50)))
    }
    
    function startLease(RoomNum, Buyer:entity) {
        EGP:egpColor(Elements:get("BuyBox"+RoomNum),Primary)
        EGP:egpSetText(Elements:get("Buy"+RoomNum),"Renew")
        Residents[RoomNum,entity] = Buyer
        addEntity(Buyer, RoomNum)
        Owner:msg("Sold "+RoomNames[RoomNum,string]+" to " + Residents[RoomNum,entity]:name() + ".")
        Timer:addTime(toString(RoomNum), 1800)
        if (Charge:isValid()) {
            moneyGive(Charge, Prices[RoomNum, number] * 0.05)
        }
        if (Togglepin) {
            Buyer:msg("Your pin is: "+Pins[RoomNum,string] + ".")
        }
    }
    function endLease(RoomNum) {
        EGP:egpColor(Elements:get("BuyBox"+RoomNum),Green)
        EGP:egpSetText(Elements:get("Buy"+I),"Purchase")
        EGP:egpSetText(Elements:get("Room "+RoomNum),RoomNames[RoomNum,string]) 
        Residents[RoomNum,entity] = noentity()
        removeEntity(RoomNum)
    }
    
    function draw() {
        EGP:egpClear()
        #Generic
        createBox("Background",size(vec2(ScreenXY,ScreenXY)), color(Dark), coords(vec2(0,0)))
        createText("Title",size(36),align(1),coords(vec2(ScreenXY/2+15,0)))
        createText("A Tomato Production",size(16),coords(vec2(ScreenXY/2-60,30))) 
        createText("Description",size(24),align(1),coords(vec2(ScreenXY/2+15,60))) 
        EGP:egpSetText(Elements:get("Title"),"HOTEL SYSTEMS")
        EGP:egpSetText(Elements:get("Description"),"Type !desc (name) to change")
    
        #Booking Table
        createBox("TableBackground",size(vec2(ScreenXY-20,50)), color(White), coords(vec2(10,140)))
        createBox("Header",size(vec2(ScreenXY-20,40)), color(Secondary), coords(vec2(10,100)))
        createText("Room Type",size(16),coords(vec2(20,110)))
        createText("Sleeps",size(16),coords(vec2(260,110)))
        createText("Price/Night",size(16),coords(vec2(323,110)))
        createText("Availability",size(16),coords(vec2(422,110)))
        
        #Columns
        createBox("Column1",size(vec2(1,90)), color(Light), coords(vec2(250,100)))
        createBox("Column2",size(vec2(1,90)), color(Light), coords(vec2(310,100)))
        createBox("Column3",size(vec2(1,90)), color(Light), coords(vec2(410,100)))
        
        #Contact Landlord
        createBox("ContactBox",size(vec2(220,50)), color(Secondary), coords(vec2(ScreenXY/2-100,450)))
        createText("Contact Landlord",size(24),align(1),coords(vec2(ScreenXY/2+10,465)))
        
        #Footer info
        createText("1 Night = 30 mins",size(16),coords(vec2(10,200)))
    }
    
    #Setting up
    draw()
    Rooms = 1
    Togglepin = 0
}

interval(100)

findByClass("player")
User = findClosest(entity():pos())

#Run on intervals to avoid tick exceed exception
if(Rooms!=I) {
    updateRoom()
}

if (~User && !Notify) {
    if(cursorPos(Elements:get("ContactBox"))){
        soundPlay(19,0,"hl1/fvox/bell.wav")
        User:msg("" + owner():name() + " has been notified.")
        Owner:msg("" + User:name() + " wants to contact you.")
        Notify = 1
        timer("notify", 10000)
    }
}
if(clk("notify")) {
    Notify = 0
}

#User presses buy button
for (I = 1,Rooms){       
    if(cursorPos(Elements:get("BuyBox"+I))) {
        createText("Buy"+I, size(18), color(White), align(1), coords(vec2(460,105+I*50)))
        if (Residents[I,entity] == User) {
            EGP:egpSetText(Elements:get("Buy"+I),"Renew")
            EGP:egpColor(Elements:get("BuyBox"+I),Primary)
        }
        else {
            EGP:egpSetText(Elements:get("Buy"+I),"Select")
        }
        if (User:keyPressed("E") & Residents[I,entity] == noentity() || Residents[I,entity] == User) {
            moneyRequest(User,Prices[I, number], "Buy "+RoomNames[RoomSelected, string])
            RoomSelected = I
        }
    }
    elseif (Residents[I,entity] == noentity()){
        EGP:egpSetText(Elements:get("Buy"+I),"Purchase")
        EGP:egpColor(Elements:get("BuyBox"+I),Green)
    }
    else {
        EGP:egpSetText(Elements:get("Buy"+I),"Booked")
        EGP:egpColor(Elements:get("BuyBox"+I),Red)
    }
}   

#Person pays
if(moneyClk()){
    if (Owner != owner()) {
        local Amount = Prices[RoomSelected, number]
        moneyGive(Owner, Amount - Amount * 0.05)
        Owner:msg("Paid: $" + Amount + " (-5 percent commission fee.)")
    }
    startLease(RoomSelected, User)
}

#Timer interval
for (I = 1,Rooms){
    local ID = toString(I)
    local Time = Timer:getTime(ID)
    local Resident = Residents[I,entity]
    if(Time>0.1){
        Timer:reduceTime(ID, 0.1)
        local Minutes = round(Time/60)
        local Text = ""
        if (Minutes < 2) {Text = "min"} 
        else {Text = "mins"}
        EGP:egpSetText(Elements:get("Room "+I),Resident:name() + ": " + Minutes + Text)
        }
    elseif(Time == 0.1){
        endLease(I)  
    }
    if(Time == 600){ # 10 min
        Resident:msg("Your lease expires in 10 minutes, head down to reception to renew.")
    }
    elseif(Time == 300){ # 5 min
        Resident:msg("Your lease expires in 5 minutes, head down to reception to renew.")
    }
}

#Chat commands
event chat(Person:entity, Said:string, _) {
    if(Person == Owner && Said:index(1) == "!")  
    {  
        Arguments = Said:sub(2):explode(" ")
        Command = Arguments:shiftString() 
        if(Command == "rooms")  
        {                    
            Number = Arguments[1,string]:toNumber()
            if (Number  <= 6 & Number  != 0) {Rooms = Number }
            else {Owner:msg("ERROR: Type in between 1-6 rooms")}
        }
        elseif (Command == "title")  
        {
            local Title = ""
            for(I = 1,Arguments:count()){
                Title += Arguments[I,string] 
                Title += " " 
            }                  
            EGP:egpSetText(Elements:get("Title"),Title)
        }
        elseif (Command == "desc")  
        {
            local Title = ""
            for(I = 1,Arguments:count()){
                Title += Arguments[I,string] 
                Title += " " 
            }                  
            EGP:egpSetText(Elements:get("Description"),Title)
        }
        elseif (Command == "name") {
            local Name = ""
            local RoomNum = Arguments[1,string]
            for(I = 2,Arguments:count()){
                Name += Arguments[I,string] 
                Name += " " 
            }                  
            EGP:egpSetText(Elements:get("Room "+RoomNum),Name)
            RoomNames[RoomNum:toNumber(),string] = Name
        }
        elseif (Command == "size") {
            local RoomNum = Arguments[1,string]
            local Text = Arguments[2,string]               
            EGP:egpSetText(Elements:get("Sleep"+RoomNum),Text)
        }
        elseif (Command == "price") {
            local RoomNum = Arguments[1,string]
            local Text = Arguments[2,string]               
            EGP:egpSetText(Elements:get("Price"+RoomNum),"$"+Text)
            Prices[RoomNum:toNumber(),number] = Text:toNumber()
        }
        elseif (Command == "evict") {
            local RoomNum = Arguments[1,string] 
            local Resident = Residents[RoomNum:toNumber(),entity]
            if (Resident != noentity()) {
                Timer:setTime(RoomNum, 0.1)
                Owner:msg("Evicted resident: " + Resident:name())
                endLease(RoomNum:toNumber())     
            }    
            else {Owner:msg("That room is unoccupied.")}
        }
        elseif (Command == "addtime") {
            local RoomNum = Arguments[1,string]
            if (RoomNum:toNumber() > 5) {Owner:msg("!addtime (room number) (amount in minutes)")}
            else {
                Time = Arguments[2,string] 
                Minutes = Time:toNumber()*60
                if (Residents[RoomNum:toNumber(),entity]!=noentity()) {
                    Timer:addTime(RoomNum, Minutes)
                    Owner:msg("Added time to resident: " + Residents[RoomNum:toNumber(),entity]:name())
                }
                else {Owner:msg("Please select an occupied room!")} 
            }           
        }
        elseif (Command == "setpin") {
            local RoomNum = Arguments[1,string]
            local Pin = Arguments[2,string]  
            Pins[RoomNum:toNumber(),string] = Pin
            Owner:msg("Set room " + RoomNum + "'s pin to " + Pin + ".")
        }
        elseif (Command == "togglepin") {
            Togglepin = !Togglepin
            if (Togglepin) {
                Owner:msg("Pins are now being sent after purchase.")
            }
            else {
                Owner:msg("Pin notifications are now disabled.")
            }
        }
        elseif (Command == "listpins") {
            for(I = 1,Pins:count()){
                Owner:msg("Room pin " + I + ": " + Pins[I, string]+".") 
            }   
        }
        elseif (Command == "changeowner") {
            local Text = Arguments[1,string]
            local NewOwner = findPlayerByName(Text)
            # If owner exists - error
            if (NewOwner:isValid()) {
                Owner = NewOwner
                Owner:msg("Owner changed.")
            }
            else {
                Owner:msg("Please select a valid player.")
            }         
        }
        elseif (Command == "theme") {
            local Text = Arguments[1,string]
            if (Text == "1") {
                Dark = vec(44,51,51)
                Primary = vec(46,79,79)
                Secondary = vec(14,131,136)
                Light = vec(203, 228, 222)
                I = 0
                draw()
                Owner:msg("Theme changed.")
            }
            elseif (Text == "2") {
                Dark = vec(11,36,71)
                Primary = vec(25,55,109)
                Secondary = vec(87,108,188)
                Light = vec(165,215,232)
                I = 0
                draw()
                Owner:msg("Theme changed.")
            }         
            elseif (Text == "3") {
                Dark = vec(36, 89, 83)
                Primary = vec(64, 142, 145)
                Secondary = vec(228, 147, 147)
                Light = vec(216, 216, 216)
                I = 0
                draw()
                Owner:msg("Theme changed.")
            }    
            else {
                Owner:msg("Please select a valid theme number.")
            }
        }
        elseif (Command == "notice") {
            local Text = ""
            for(I = 1,Arguments:count()){
                Text += Arguments[I,string] 
                Text += " " 
            }                  
            for (I = 1, Residents:count()) {
                Residents[I,entity]:msg(" NOTICE: "+Text)
            }     
        }
        elseif (Command == "help") {
            local Array = array(
            "!title (name) to change hotel title",
            "!rooms (number) to change hotel space",
            "!desc (text) to change hotel description",
            "!name (room number) (name)",
            "!size (room number) (sleep capacity)",
            "!price (room number) (amount)",
            "!addtime (room number) (amount in minutes)",
            "!evict (room number) to kick out a resident",
            "!theme (1-3) to change board theme",
            "!setpin (room number) to set a rooms pin",
            "!togglepin to toggle security pin notifications",
            "!listpins to list every room's pin",
            "!notice (text) send a message to all residents",
            "!changeowner (name) to change owner of Hotel.")
            for (I = 1, Array:count()){
                Owner:msg(""+Array[I,string])
            }
        }
    }  
}


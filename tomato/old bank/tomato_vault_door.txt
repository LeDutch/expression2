@name Tomato Vault Door
@inputs Entry:entity VaultNum
@outputs Door
@persist [DB]:table
@persist [DSGroup Hash]:string
@persist [Player]:entity

if (~EGP) {reset()}
if(first() || dupefinished()) {
    #include "library/tomato_lib"
    #Global variables
    
    BankName = "BetterBank"
    Prefix = BankName
    
    DSGroup = "tomatobankingvaults"
    dsJoinGroup(DSGroup)
    
    Hash = "vaults"+toString(randint(1000000,9999999))
    
    function doorCheck(Entity:entity) {
        local Array = array()
        local Vaults = DB["Vaults",table]
        Array:pushEntity(Vaults[VaultNum,table]["Account", entity])
        Array:pushEntity(Vaults["Collector", entity])
        Array:pushEntity(owner())
        for (I=1, 3) {
            if (Array[I, entity]:aimEntity() == Entity && Array[I, entity]:keyPressed("e")) {
                Door = 1
                timer("door", 4000)
            }
        }
    }
    
    dsSend("req", DSGroup, Hash)
}

interval(1000)

if(dsClk(Hash)) {
    DB = dsGetTable()
}

if (Entry:isValid()) {
    doorCheck(Entry) 
}

if(clk("door")) {
    Door = 0
}


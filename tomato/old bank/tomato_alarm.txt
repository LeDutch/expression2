@name Tomato Alarm
@outputs Alarm:number
@persist [DB]:table

if (~EGP) {reset()}
if(first() || dupefinished()) {
    #include "library/tomato_lib"
    
    #Ease of use functions
    function checkAlarm() {
        local Min = DB["Alarm", table]["Corner1", vector]
        local Max = DB["Alarm", table]["Corner2", vector]
        if (Min != vec(0,0,0)) {
            findIncludeClass("player")
            findInBox(Min, Max)
                
            foreach(I:number, Player:entity = findToArray()) {
                if (Player:isAlive()) {
                    local Check = 0
                    for (A=1, 10) {
                        if (DB["Vaults", table][A, table]["Account", entity] == Player) {
                            Check = 1
                            break
                        }
                    }
                    if (!DB["Staff", table]:exists(Player:steamID()) && !Check) {
                        Alarm = 1
                        timer("stop",  1500)
                    }      
                }    
            }
        }
    }
    timer("alarm",  1000)
    broadcastRemoteEvent(table())
}

event remote(Sender:entity, Player:entity, Payload:table) {
    if(Player == owner()) {
        DB = Payload
    }
}

if(clk("alarm")) {
    checkAlarm()
    timer("alarm",  1000)
}

if(clk("stop")) {
    Alarm = 0
}


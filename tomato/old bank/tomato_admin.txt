@name Tomato Admin Panel
@persist [DB]:table
@persist [I Screen Time]:number
@persist [Profile]:entity
@persist [BankName CurrentDate Hash DSGroup]:string

if (~EGP) {reset()}
if(first() || dupefinished()) {
    #include "library/tomato_lib"
    #include "themes/bank/tomato_betterbank"
    
    Prefix = "BANK" 
    User = noentity()
    Profile = User
    BankName = "BetterBank"
    
    DSGroup = "tomatobankingterminal"
    dsJoinGroup(DSGroup)
    Hash = "terminal"+toString(randint(1000000,9999999))
    
    local Date = dateUTC()
    CurrentDate = toString(Date["day", number])+"/"+toString(Date["month", number])+"/"+toString(Date["year", number])
    
    #Ease of use functions
    function changeScreen(Num) {
        Animation = 1
        Screen = Num
        timer("changed", 200)
    }
    
    function array getCustomers() {
        local ActiveCustomers = array()
        for (I=1, 8) {
            local Vault = DB["Vaults", table][I, table]
            local Account = Vault["Account", entity]
            if (Account:isValid()) {
                ActiveCustomers:pushString(Account:steamID())
            }
        }
        return ActiveCustomers
    }
    
    function updatePanels(KEYS:array) {
        local Page = Screen - 3  # Starting from 0
        local ItemsPerPage = 6
        local KeyAmount = KEYS:count()
        
        if (KeyAmount) {
            local Customers = DB["Customers", table]
            local StartIndex = Page * ItemsPerPage + 1
            local EndIndex = min((Page + 1) * ItemsPerPage, KeyAmount)
            local PROFIT = DB["Tax", table][CurrentDate, number]
            local TOTALPROFIT = DB["Tax", table]["Total", number]
        
            for (I = StartIndex, EndIndex) {
                local Customer = Customers[KEYS[I, string], table]
                local Name = Customer["Name", string]
                local Profit = Customer["Tax", table][CurrentDate, number]
                local Tax = Customer["Membership", string]
                local Items = Customer["Printers", table][CurrentDate, array]:count()
                drawUserInfo(I - StartIndex + 1, Name, Tax, Profit, Items)
            }
            createText("Total Profit",size(20),align(1),coords(vec2(ScreenXY/2,50)))
            createText("Session",size(16),align(1),coords(vec2(ScreenXY/2,70)))
            createText("Hourly",size(16),align(1),coords(vec2(ScreenXY/2,85)))
            EGP:egpSetText(Elements:get("Total Profit"), "Total Profit: $"+formatNumber(TOTALPROFIT))
            EGP:egpSetText(Elements:get("Session"), "Session: $"+formatNumber(PROFIT))
            EGP:egpSetText(Elements:get("Hourly"), "$"+formatNumber((PROFIT) ? PROFIT/(Time/60) : 0)+"/hr")
        }
        else {
            createText("Error", size(22), color(Light), align(1), coords(vec2(ScreenXY/2,ScreenXY/2)))
            EGP:egpSetText(Elements:get("Error"), "There are no active customers.")
        }
    }
    timer("update", 1000)
    timer("proxim", 1000)
    changeScreen(1)
}

interval(100)

if(clk("proxim")) {
    if (Profile:isValid()) {
        if (!proximityCheck(Profile, 100)) {
            if(Screen != 1) {
                changeScreen(1)
                Profile = noentity()
            }
        }
    }
    timer("proxim", 1000)
}

    
if (Animation) {
    if (Screen == 1) {
        fadeIn("Welcome", 10, 0.5)
        fadeIn("Press [E] to start", 10, 0.5)
    }
    elseif (Screen == 2) {
        loadingSpinner("Loading")
    }
    else {
        Animation = 0
    }
}
else {
    if (Screen == 1) {
        if (Screen == 1) {
            if (~User & User:isValid()) {
                Profile = User
                changeScreen(2)
            }
        }
    }
    if (Screen >= 2) {
        local BackID = Elements:get("BackButton")
        local NextID = Elements:get("NextButton")
        if(cursorPos(BackID, Profile)) {
            EGP:egpColor(BackID, Secondary)
            if (User:keyPressed("E")) {
                changeScreen(Screen - 1)
            }
        }
        else {
            EGP:egpColor(BackID, Primary)
        }
        if(cursorPos(NextID, Profile)) {
            EGP:egpColor(NextID, Secondary)
            if (User:keyPressed("E")) {
                changeScreen(Screen + 1)
            }
        }
        else {
            EGP:egpColor(NextID, Primary)
        }
    }
}

#Change screens
if (clk("changed")) {
    Animation = 1
    if (Screen == 1) {
        drawAdminInitial(0)
    }
    elseif(Screen == 2) {
        broadcastRemoteEvent(table())
        drawLoading()
    }
    elseif(Screen > 2) {
        local ActiveCustomers = getCustomers()
        drawAdminPanel(0, ActiveCustomers:count())
        updatePanels(ActiveCustomers)
    }
}
if(clk("update")) {
    if (Screen > 2) {
        local ActiveCustomers = getCustomers()
        updatePanels(ActiveCustomers)
    }
    Time++
    timer("update", 1000)
}

event remote(Sender:entity, Player:entity, Payload:table) {
    DB = Payload
    if (Screen == 2) {
        changeScreen(3)
    }
}


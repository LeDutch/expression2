@name Tomato Terminator HUD
@inputs 
@outputs 
@persist Screen:vector2 Direction Target:entity
@trigger 
@strict

if (~EGP) {reset()}
if (first() || dupefinished()) {
    #include "library/tomato_lib"
    
    Screen = egpScrSize(owner())
    
    function calcDirection() {
        local Dir = owner():aimNormal()
        if (Dir:x() == 1) {
            Direction = 270
        }
        elseif(Dir:x() == -1) {
            Direction = 90
        }
        elseif(Dir:y() == 1) {
            Direction = 180
        }
        elseif(Dir:y() == -1) {
            Direction = 0
        }
    }
    
    function calcTarget() {
        local Aim = owner():aimEntity()
        if (Aim) {
            Target = Aim
        }
    }
    
    function array proximity(Radius) {
        local Min = owner():aabbWorldMin() - vec(Radius, Radius, Radius)
        local Max = owner():aabbWorldMax() + vec(Radius, Radius, Radius)
        findIncludeClass("player")
        findInBox(Min, Max)
        return findToArray()
    }
    
    function calcRader() {
        local RadarCentre = vec2(Screen:x() - (1/16 * Screen:x()) - 83, 1/4 * Screen:y() + 77)
        local OwnerPos = owner():pos()
        local Players = proximity(320)
        local Dir = owner():aimNormal()
        for (I=1, Players:count()) {
            local Pos = Players[I, entity]:pos()
            createBox("Player"+I, size(vec2(6,6)), color(White), coords(RadarCentre + vec2(((OwnerPos - Pos)/5))))
        }
    }
    
    function drawRadarAnim(I) {
        local TopCorner = vec2(Screen:x() - (1/16 * Screen:x()) - 160, 1/4 * Screen:y())
        local Opacity = 1
        if (I<1 || I == 10) {Opacity = 0}
        createBox("Radar"+1, size(vec2(160,1)), color(White), coords(TopCorner + vec2(0,(I-1)*20)), 255*Opacity)
        createBox("Radar"+2, size(vec2(160,1)), color(White), coords(TopCorner + vec2(0,(I-1)*20+2)), (255-255/4)*Opacity)
        createBox("Radar"+3, size(vec2(160,1)), color(White), coords(TopCorner + vec2(0,(I-1)*20+4)), (255-255/2)*Opacity)
        createBox("Radar"+4, size(vec2(160,1)), color(White), coords(TopCorner + vec2(0,(I-1)*20+6)), (255/4)*Opacity)
    }
    
    function drawCompass() {
        local TopCorner = vec2(1/8 * Screen:x(), 1/8 * Screen:y() + 100)
        local Points = array(" N", "NW", " W", "SW", " S", "SE", " E", "NE")
        for (I=1,8) {
            local Length = 60
            if (I % 2 == 0) {
                Length = 40
            }
            createBox("Line"+I, size(vec2(2,Length)), color(White), coords(TopCorner))
            local ID = Elements:get("Line"+I)
            EGP:egpAngle(ID,TopCorner,vec2(-1,2),(I-1)*45+Direction)
            createText(Points[I, string], size(16), coords(vec2(-7,Length*-1.5)), "Line"+I)
        }
    }
    
    function drawRadar() {
        local TopCorner = vec2(Screen:x() - (1/16 * Screen:x()) - 160, 1/4 * Screen:y())
        for (I=1,9) {
            createBox("GridX"+I, size(vec2(160,1)), color(White), coords(TopCorner + vec2(0,(I-1)*20)))
            createBox("GridY"+I, size(vec2(1,160)), color(White), coords(TopCorner + vec2((I-1)*20,0)))
        }
    }
    
    function drawCodes() {
        local Left = vec2(1/8 * Screen:x() - 120, Screen:y()/2 + 20)
        local Right = vec2(1/8 * Screen:x(), Screen:y()/2 + 20)
        for (I=1,6) {
            createText("Left"+I, size(16), coords(Left + vec2(0,I*20)))
            createText("Right"+I, size(16), coords(Right + vec2(0,I*20)))
            EGP:egpSetText(Elements:get("Left"+I), toString(randint(100,999)))
            EGP:egpSetText(Elements:get("Right"+I), toString(randint(100,999)))
        }
    }
    
    function drawTarget() {
        local Name = Target:name()
        local Armor = Target:armor()
        local Health = Target:health()
        local Ammo = Target:ammoCount(Target:primaryAmmoType())
        EGP:egpSetText(Elements:get("TARGET"), "TARGET: " + Name)
        EGP:egpSetText(Elements:get("ARMOR"), "ARMOR: " + Armor)
        EGP:egpSetText(Elements:get("HEALTH"), "HEALTH: " + Health)
        EGP:egpSetText(Elements:get("AMMO"), "AMMO: " + Ammo)
    }
    
    function drawUI() {
        local CentreLeft = vec2(1/8 * Screen:x() - 120, Screen:y()/2)
        createText("CYBERDYNE SYSTEMS SERIES 500 VERSION 2.4", size(25), align(1), coords(vec2(Screen:x()/2,10)))
        createBox("Top", size(vec2(Screen:x()-40,3)), color(White), coords(vec2(20,40)))

        createText("ALL DEFENSE SYSTEMS", size(16), align(0), coords(CentreLeft - vec2(0,40)))
        createText("ACTIVE STATUS: 3583A", size(16), align(0), coords(CentreLeft - vec2(0,20)))
        createText("I/O LEVELS AT MAX", size(16), align(0), coords(CentreLeft))
        
        createBox("Left", size(vec2(150,3)), color(White), coords(CentreLeft + vec2(0,30)))
        
        createText("VEHI", size(16), align(0), coords(CentreLeft + vec2(50,40)))
        createText("SIZE", size(16), align(0), coords(CentreLeft + vec2(50,60)))
        createText("TSPD", size(16), align(0), coords(CentreLeft + vec2(50,80)))
        createText("HPWR", size(16), align(0), coords(CentreLeft + vec2(50,100)))
        createText("CODE", size(16), align(0), coords(CentreLeft + vec2(50,120)))
        createText("RANGE", size(16), align(0), coords(CentreLeft + vec2(50,140)))
        drawCodes()
        
        createText("POWER", size(25), align(0), coords(CentreLeft - vec2(0,70)))
        EGP:egpSetText(Elements:get("POWER"), "POWER: 100%")
        
        local Bottom = vec2(20,Screen:y() - 20)
        createBox("Bottom", size(vec2(Screen:x()-40,3)), color(White), coords(Bottom))
        createText("TARGET", size(20), coords(Bottom - vec2(0,30)))
        createText("ARMOR", size(20), align(1), coords(Bottom - vec2(-Screen:x()/4-100,30)))
        createText("HEALTH", size(20), align(1), coords(Bottom - vec2(-Screen:x()/2 - Screen:x()/4+100,30)))
        createText("AMMO", size(20), align(1), coords(Bottom - vec2(-Screen:x()+100,30)))
        
        drawRadar()
    }
    
    function background() {
        EGP:egpClear()
        drawCompass()
        calcDirection()
        drawUI()
        timer("radar", 1000)
        timer("radaranim", 3000)
    }
}

interval(100)
if (clk("radar")) {
    calcRader()
    timer("radar", 1000)
}
if (clk("radaranim")) {
    Animation = 2
    timer("radaranim", 3000)
}
if (clk("powerfailure")) {
    Animation = 1
    EGP:egpSetText(Elements:get("I/O LEVELS AT MAX"), "I/O LEVELS AT MIN")
    EGP:egpSetText(Elements:get("ACTIVE STATUS: 3583A"), "ACTIVE STATUS: ERROR" + randint(10000, 60000) + " REBOOTING")
    timer("powerfailure", randint(5000, 20000))
    timer("error", 1500)
}

if (clk("error")) {
    EGP:egpSetText(Elements:get("I/O LEVELS AT MAX"), "I/O LEVELS AT MAX")
    EGP:egpSetText(Elements:get("ACTIVE STATUS: 3583A"), "ACTIVE STATUS: 3583A")
}

if (Animation == 1) {
    local Dur = 1
    local Time = checkAnimation("powerfailure", Dur)
    EGP:egpColor(Elements:get("REBOOTING"), vec(127.5 * sin(360 * 0.1 * curtime()) + 127.5,0,0))
    if (Time % 0.3 == 0) {
        EGP:egpSetText(Elements:get("POWER"), "POWER: " + min(100,round(Dur/Time*randint(10,30))) + "%")
    }
    drawCodes()
}
if (Animation == 2) {
    local Dur = 1
    local Time = checkAnimation("radaranim", Dur)
    drawRadarAnim(Time*10)
}

calcDirection()
calcTarget()
if(changed(Direction)) {
    drawCompass()
}
if(changed(Target)) {
    if (Target:isPlayer()) {
        drawTarget()
    }
    else {
        EGP:egpSetText(Elements:get("TARGET"), "TARGET: ")
        EGP:egpSetText(Elements:get("ARMOR"), "ARMOR: ")
        EGP:egpSetText(Elements:get("HEALTH"), "HEALTH: ")
        EGP:egpSetText(Elements:get("AMMO"), "AMMO: ")
    }
}


event egpHudConnect(Hud:wirelink, Player:entity, Connected:number) {
    if (Hud == EGP & Connected) {
        print("Screen: " + toString(egpScrSize(owner())))
        background()
        stoptimer("powerfailure")
        timer("powerfailure", 1000)
    }
}

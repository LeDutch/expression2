@name Test
@inputs 
@outputs 
@persist 
@strict

#include "lib/tomato/1.1/tomato_egp"
#include "lib/tomato/1.1/tomato_ui"
#include "lib/tomato/1.1/tomato_animations"

if (initial()) {
    # Background
    box(table("x"=0.0, "y"=0.0, "w"=515.0, "h"=515.0, "r"=106, "g"=23, "b"=23)) 
    
    box("Menu", table("x"=400.0, "y"=200.0, "w"=100.0, "h"=250.0, "r"=255, "g"=255, "b"=255)) 
        
    let Parent = box("TheBox", table("x"=10, "y"=10, "w"=20, "h"=20, "r"=163, "g"=104, "b"=47))
    let Child = box("TheMiniBox", table("x"=100, "y"=100, "w"=20, "h"=20, "r"=255, "g"=255, "b"=255))
    
    Parent:giveChild(Child)
    
    Child:giveParent(Parent)
    
    
    #Elements:get("TheBox"):giveChild(Elements:get("TheMiniBox"))
    
    checkBox("TheCheckbox", table("coords"=vec2(250,250), "scale"=0.5))
    
    
    dropDown("TheDropDown", 
    		array("This is an option", "2awdsad", "3asds", "4asdq"), 
    		table(
    		"coords"=vec2(50,350), 
    		"text"="Testing",
      "scale"=1.5
    	))
    
    slider("TheSlider", table(
    		"coords"=vec2(200,400), 
    		"w"=150, 
    		"scale"=1.2, 
    		"text"="Test Bar",
    		"min"=50,
    		"max"=150,
    		"interval"=10
    ))
     
    scrollBar("Scrollbar", table(
      "x"=360,
      "y"=200,
      "yoffset"=10,
      "menu"="Menu",
      "h"=150,
    		"w"=7, 
    		"scale"=1.2, 
    		"min"=50,
    		"max"=150,
    		"interval"=10,
      "radius"=0
    ))
    
    
    checkBox("TheCheckbox", table("coords"=vec2(250,250), "scale"=0.5))
    
    
    
    circle("Fade", table("x"=340.0, "y"=85.0, "w"=16.0, "h"=28.0, "r"=217, "g"=217, "b"=217))
}

if (userInput()) {
    let Cursor = cursorObj()
    switch (Cursor) {
        case "TheBox",
            moveTo("TheBox", 0.5, vec2(randint(20,480), randint(20,480)))
        break
        case "Fade",
            fadeOut("Fade", 0.5)
        break
        case "TheDropDown",
            print(UI["TheDropDown", table]["value", string])
        break
        case "TheCheckbox",
            let Checked = UI["TheCheckbox", table]["value", number]
            if (Checked) {
                loadingSpinner("TheSpinner", table("coords"=vec2(150,150), "size"=12))
            }
            else {
                stopSpinner("TheSpinner")
            }
        break
    }
}

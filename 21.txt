@name 21
@inputs EGP:wirelink User:entity
@persist Direction:vector2 [Multiplier Page]:number CurrentUser:entity
@persist Amount:number RNP:number RND:number

function number hitDealer(){
        Card = random(1,11)
        
        if(Card == 11){
            Ran = random(0,2)
            switch(Ran){
                case 0,
                PCard = "J"
                break
                
                case 1,
                PCard = "Q"
                break
                
                case 2,
                PCard = "K"
                

                }

            
            }
        
        elseif(Card == 1 & RND <= 11){
                Card = 11
                PCard = "A"
            }
        else{
            Card = 1
            PCard = "A"
            }
        
        return Card
        
        }
function number hitPlayer(){
        Card = random(1,11)
        
        if(Card == 11){
            Ran = random(0,2)
            switch(Ran){
                case 0,
                PCard = "J"
                break
                
                case 1,
                PCard = "Q"
                break
                
                case 2,
                PCard = "K"
                break
                }
            
            }
      return Card  

    }


if(first())
{
    entity():createWire(entity():isWeldedTo(), "EGP", "wirelink")
    entity():createWire(entity():isWeldedTo(), "User", "User")
    
    function number pointCircleIntersection(Point:vector2, Pos:vector2, Size:vector2)
    {
        return Point:distance(Pos) < Size:x()
    }
    
    
    EGP:egpClear()
    

    EGP:egpCircle(11, vec2(256, 256), vec2(180))
    EGP:egpColor(11, vec(255, 0, 0))
    
    EGP:egpBox(1, vec2(256), vec2(1024))
    EGP:egpMaterial(1, "gui/gradient_up")
    EGP:egpAngle(1, 45)
    EGP:egpColor(1, vec(150, 230, 75))
    
    EGP:egpBox(2, vec2(256), vec2(1024))
    EGP:egpMaterial(2, "gui/gradient_down")
    EGP:egpAngle(2, 45)
    EGP:egpColor(2, vec(150, 255, 75))
    
    EGP:egpBox(3, vec2(256), vec2(40))
    EGP:egpText(3, "Levi's",vec2(0,0))
    EGP:egpColor(3,vec(0,0,0))
    
    EGP:egpText(4, "Blackjack", vec2(256, 224))
    EGP:egpAlign(4, 1, 1)
    EGP:egpSize(4, 42)
    EGP:egpFont(4, "Marlett")
    
    EGP:egpText(4, "Blackjack", vec2(256, 240))
    EGP:egpAlign(4, 1, 1)
    EGP:egpSize(4, 42)
    EGP:egpFont(4, "Marlett")
    
    EGP:egpText(5, "Press E to Start", vec2(256, 275))
    EGP:egpAlign(5, 1, 1)
    EGP:egpSize(5, 30)
    EGP:egpFont(5, "Marlett")
    
    EGP:egpText(6, "Bet: $100,000", vec2(256, 320))
    EGP:egpAlign(6, 1, 1)
    EGP:egpSize(6, 20)
    EGP:egpFont(6, "Marlett")
    
    Page = 1
    
    
}

elseif(User & ~User)
{
    EGP:egpCircle(11, vec2(0, 0), vec2(0))
    if(Page == 1)
    {
        moneyRequest(User, 100000, "Blackjack")
    }
    
    elseif(Page == 2 & CurrentUser == User)
    {
        CursorPos = EGP:egpCursor(CurrentUser)
        if(pointCircleIntersection(CursorPos, vec2(256, 128), vec2(100)))
        {
            EGP:egpClear()
            EGP:egpBox(20, vec2(256),vec2(256))
               

            
            #[ else
            {
                EGP:egpClear()
                EGP:egpBox(1, vec2(256), vec2(1024))
                EGP:egpMaterial(1, "gui/gradient_up")
                EGP:egpAngle(1, 45)
                EGP:egpColor(1, vec(255, 255, 0))
                
                EGP:egpBox(2, vec2(256), vec2(1024))
                EGP:egpMaterial(2, "gui/gradient_down")
                EGP:egpAngle(2, 45)
                EGP:egpColor(2, vec(255, 0, 0))                
                
                EGP:egpBox(1,vec2(256),vec2(256))
                EGP:egpText(6, "You Lose", vec2(256, 256))
                EGP:egpAlign(6, 1, 1)
                EGP:egpSize(6, 100)
                EGP:egpFont(6, "Marlett")   
                    
                reset()               
                    
            }
            
            
        }
        
        elseif(pointCircleIntersection(CursorPos, vec2(256, 384), vec2(64)))
        {
            
            
            moneyGive(CurrentUser, Amount)
            reset()
        }
        ]#
    }
}
}



elseif(moneyClk("Blackjack"))
{
    
    for(I = 4, 5)
    {
        EGP:egpRemove(I)
    }
    Amount = 100000
    Page = 2
    CurrentUser = moneyClkPlayer()
    
    P1 = hitPlayer()
    P2 = hitPlayer()
    D1 = hitDealer()
    D2 = hitDealer()
    
    RNP = P1 + P2
    RND = D1 + D2

    EGP:egpClear()
    
 
   # EGP:egpBox(1, vec2(256), vec2(1024))
    EGP:egpMaterial(1, "gui/gradient_up")
    EGP:egpAngle(1, 45)
    EGP:egpColor(1, vec(23))
    
    EGP:egpBox(2, vec2(256), vec2(1024))
    EGP:egpMaterial(2, "gui/gradient_down")
    EGP:egpAngle(2, 45)
    EGP:egpColor(2, vec(230))
    
    EGP:egpText(15,"Dealer's",vec2(110,10))
    EGP:egpSize(15,30)
    
    EGP:egpText(16,"Player's",vec2(110,466))
    EGP:egpSize(16,30)
    
    
    # TOP CARD BOXES
    EGP:egpBox(19,vec2(100,100),vec2(80,105))
    EGP:egpColor(19,vec(70,70,70))
    EGP:egpBox(18,vec2(100),vec2(70,95))
    EGP:egpColor(18,vec(255))
    
    EGP:egpBox(20,vec2(210,100),vec2(80,105))
    EGP:egpColor(20,vec(70))
    EGP:egpBox(21,vec2(210,100),vec2(70,95))
    EGP:egpColor(21,vec(255))
 
    #BOTTOM CARD BOXES
    EGP:egpBox(22,vec2(100,400),vec2(80,105))
    EGP:egpColor(22,vec(70))
    EGP:egpBox(23,vec2(100,400),vec2(70,95))
    EGP:egpColor(23,vec(255))
    
    EGP:egpBox(24,vec2(210,400),vec2(80,105))
    EGP:egpColor(24,vec(70))
    EGP:egpBox(25,vec2(210,400),vec2(70,95))
    EGP:egpColor(25,vec(255))
    
    #TOP TOTAL
    EGP:egpBox(30,vec2(300,100),vec2(60,60))
    EGP:egpColor(30,vec(70))
    EGP:egpBox(31,vec2(300,100),vec2(50,50))
    EGP:egpColor(31,vec(255))
    
    EGP:egpText(100,"0",vec2(280,80))
    EGP:egpColor(100,vec(0))
    EGP:egpSize(100,40)
    
    #BOTTOM TOTAL
    EGP:egpBox(26,vec2(300,400),vec2(60,60))
    EGP:egpColor(26,vec(70))
    EGP:egpBox(27,vec2(300,400),vec2(50,50))
    EGP:egpColor(27,vec(255))
    
    EGP:egpText(101,"2",vec2(280,380))
    EGP:egpColor(101,vec(0))
    EGP:egpSize(101,40)
    
    
    #HIT CIRCLE
    EGP:egpCircle(5, vec2(400, 200), vec2(50))
    EGP:egpColor(5, vec(50,200,0))
    EGP:egpText(6,"HIT",vec2(380,190))
    EGP:egpSize(6,25)
    
    #STAY CIRCLE
    EGP:egpCircle(7, vec2(400, 310), vec2(50))
    EGP:egpColor(7, vec(255,0,0))
    EGP:egpText(8,"STAY",vec2(375,300))
    EGP:egpSize(8,25)
    
    #TOP CARDS
    EGP:egpText(200,"" + round(D1), vec2(80,60))
    EGP:egpColor(200,vec(0,0,0))
    EGP:egpSize(200,70)
    
    EGP:egpText(201,"" + round(D2), vec2(190,60))
    EGP:egpColor(201,vec(0,0,0))
    EGP:egpSize(201,70)
    
    #BOTTOM CARDS
    EGP:egpText(202,"" + round(P1), vec2(80,370))
    EGP:egpColor(202,vec(0,0,0))
    EGP:egpSize(202,70)
    
    EGP:egpText(203,"" + round(P2), vec2(190,370))
    EGP:egpColor(203,vec(0,0,0))
    EGP:egpSize(203,70)
    
    
    timer("DistanceCheck", 2000)
    timer("reset", 5000)
    
}


elseif(clk("DistanceCheck"))
{
    if(CurrentUser:pos():distance(EGP:entity():pos()) > 300)
    {
        reset()
    }
    timer("DistanceCheck", 2000)
}
elseif(clk("reset")){
    reset()
}





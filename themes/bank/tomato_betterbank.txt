@name Bank BetterBank Theme
if (first()) {
    #include "tomato_lib"
    Profile = noentity()
    BankName = "BetterBank"
    Screen = 1
    
    
    #Colours
    Dark = vec(27, 38, 44)
    Secondary = vec(15, 76, 117)
    Primary = vec(50, 130, 184)
    Light = vec(187, 225, 250)
    
    #-------- Global Screens ---------#
    function background() {
        #Global Screen Vars
        EGP:egpClear()
        createBox("Background",size(vec2(ScreenXY,ScreenXY)), color(Dark), coords(vec2(0,0)))
        createText("A Tomato Production",size(16),align(1),coords(vec2(ScreenXY/2,ScreenXY-30))) 
        
        local ID = Elements:get("Border")
        EGP:egpRoundedBoxOutline(ID, vec2(0, 0), vec2(ScreenXY, ScreenXY))
        EGP:egpSize(ID, 20)
        EGP:egpColor(ID, Primary)
        EGP:egpRadius(ID, 30)
    }
    
    function logo() {
        #Bank Logo
        local Pos = vec2(ScreenXY / 2, 130)
        
        # Distance from the center to the outer boxes
        local OuterDistance = 20
        
        # Distance from the center to the inner boxes
        local InnerDistance = 18
        
        local Outer = array(35, -50, -130, -225)
        local Inner = array(20, -65, -145, -240)
        
        # Loop to position the outer and inner boxes
        for (I = 1, 4) {
            # Calculate the position of the outer box around the center
            local Angle = 360 * I / 4 + 20
            local OuterXOffset = (OuterDistance) * cos(Angle)
            local OuterYOffset = (OuterDistance) * sin(Angle)
            local OuterPosition = Pos + vec2(OuterXOffset, OuterYOffset)
        
            # Create the outer box at the calculated position
            local ID = Elements:get("logo_outer" + I)
            EGP:egpWedge(ID,OuterPosition,vec2(50,50))
            EGP:egpSize(ID, 175)
            EGP:egpColor(ID, White)
            EGP:egpAngle(ID, Outer[I, number])
        
            # Calculate the position of the inner box diagonally from the outer box
            local InnerAngle = Angle - 45 # Adjust the angle to be diagonal
            local InnerXOffset = (InnerDistance) * cos(InnerAngle)
            local InnerYOffset = (InnerDistance) * sin(InnerAngle)
            local InnerPosition = OuterPosition - vec2(InnerXOffset, InnerYOffset)
        
            # Create the inner box at the calculated position)
            local ID = Elements:get("logo_inner" + I)
            EGP:egpWedge(ID,InnerPosition,vec2(50,50))
            EGP:egpSize(ID, 210)
            EGP:egpColor(ID, Dark)
            EGP:egpAngle(ID, Inner[I, number])
        }
        
        local ID = Elements:get("logotip")
        EGP:egpPoly(ID, Pos+vec2(27,32), Pos+vec2(40,37), Pos+vec2(43,24),Pos+vec2(44,15), Pos+vec2(41,0), Pos+vec2(40,22))
        createBoxOutline("logobg",size(vec2(150,150)), color(Dark), coords(Pos))
        local ID = Elements:get("logobg")
        EGP:egpAngle(ID, Pos, vec2(-75,-75), 45)
        EGP:egpSize(ID, 15)
        
        createText("BB", size(50),color(White),align(1),coords(Pos-vec2(0,25)))  
    }
    
    #-------- Customer Screens -------#
    function drawInitial(Alpha) {
        background()
        logo()
        
        #Welcome text
        createText("Welcome",size(20),align(1),coords(vec2(ScreenXY/2,ScreenXY/2+60)), Alpha)
        createText("Press [E] to start",size(18),align(1),coords(vec2(ScreenXY/2,ScreenXY/2+90)), Alpha)
        EGP:egpSetText(Elements:get("Welcome"),"Welcome to " + BankName)
    }
    
    function drawTutorial() {
        background()
        createText("Text1",size(30),align(1),coords(vec2(ScreenXY/2,10)))
        createText("Text2",size(30),align(1),coords(vec2(ScreenXY/2,160)))
        createText("Text3",size(30),align(1),coords(vec2(ScreenXY/2,310)))
        EGP:egpSetText(Elements:get("Text1"),"Tier 1")
        EGP:egpSetText(Elements:get("Text2"),"Tier 2")
        EGP:egpSetText(Elements:get("Text3"),"Tier 3")
        createTextLayout("Tier1", size(vec2(ScreenXY/2,150)), color(Light), align(1), coords(vec2(ScreenXY/4,40)))
        createTextLayout("Tier2", size(vec2(ScreenXY/2,150)), color(Light), align(1), coords(vec2(ScreenXY/4,190)))
        createTextLayout("Tier3", size(vec2(ScreenXY/2,150)), color(Light), align(1), coords(vec2(ScreenXY/4,340)))
        
        EGP:egpSetText(Elements:get("Tier1"),
        "Basic storage in a communal vault. Seperate boxes locked to each costumer.")
        EGP:egpSetText(Elements:get("Tier2"),
        "Private vault storage. Medium sized vault. Can fit 1 printer rack and some shipments.")
        EGP:egpSetText(Elements:get("Tier3"),
        "Private vault storage. Large sized vault. Can fit multiple racks and shipments.")
        
        
        createBox("Back1",size(vec2(240,50)), color(Primary), coords(vec2(ScreenXY/2-120,ScreenXY/2+150)))
        createText("< Back",size(20),align(1),coords(vec2(ScreenXY/2,ScreenXY-76)))
    }
    
    function drawMenu() {
        background()
        logo()
        EGP:egpRemove(Elements:get("Welcome"))
        EGP:egpRemove(Elements:get("Press [E] to start"))
        
        
        createBox("Button1",size(vec2(240,50)), color(Primary), coords(vec2(ScreenXY/2-120,ScreenXY/2-14)))
        createBox("Button2",size(vec2(240,50)), color(Primary), coords(vec2(ScreenXY/2-120,ScreenXY/2+36)))
        createBox("Button3",size(vec2(240,50)), color(Primary), coords(vec2(ScreenXY/2-120,ScreenXY/2+86)))
        createBox("Button4",size(vec2(240,50)), color(Primary), coords(vec2(ScreenXY/2-120,ScreenXY/2+136)))
        
        createBox("Row1",size(vec2(240,2)), color(Light), coords(vec2(ScreenXY/2-120,ScreenXY/2+35)))
        createBox("Row2",size(vec2(240,2)), color(Light), coords(vec2(ScreenXY/2-120,ScreenXY/2+85)))
        createBox("Row3",size(vec2(240,2)), color(Light), coords(vec2(ScreenXY/2-120,ScreenXY/2+135)))
        
        createText("Profile",size(16),align(1),coords(vec2(ScreenXY/2,ScreenXY/2-30)))
        createText("Text1",size(20),align(1),coords(vec2(ScreenXY/2+15,ScreenXY/2)))
        createText("Text2",size(20),align(1),coords(vec2(ScreenXY/2+15,ScreenXY/2+50)))
        createText("Text3",size(20),align(1),coords(vec2(ScreenXY/2+15,ScreenXY/2+100)))
        createText("Text4",size(20),align(1),coords(vec2(ScreenXY/2+15,ScreenXY/2+150)))
        
        createMaterial("Icon1", size(vec2(20,20)), coords(vec2(ScreenXY/2-45,ScreenXY/2)), 
        "materials/porky/user.png")
        createMaterial("Icon2", size(vec2(20,20)), coords(vec2(ScreenXY/2-45,ScreenXY/2+50)), 
        "materials/tauf4/jobs/banker.png")
        createMaterial("Icon3", size(vec2(20,20)), coords(vec2(ScreenXY/2-65,ScreenXY/2+100)), 
        "materials/porky/shield.png")
        createMaterial("Icon4", size(vec2(20,20)), coords(vec2(ScreenXY/2-25,ScreenXY/2+170)), 
        "materials/underground/consoles/arrow.png")
        EGP:egpAngle(Elements:get("Icon4"), 180)
        EGP:egpSetText(Elements:get("Profile"),"Profile: " + formatName(Profile:name(), 20))
        EGP:egpSetText(Elements:get("Text1"),"Account")
        EGP:egpSetText(Elements:get("Text2"),"Vaults")
        EGP:egpSetText(Elements:get("Text3"),"Membership")
        EGP:egpSetText(Elements:get("Text4"),"Logout")
    }
    
    function drawAccount() {
        background()
        logo()
        
        createBox("Button1",size(vec2(240,50)), color(Primary), coords(vec2(ScreenXY/2-120,ScreenXY/2-14)))
        createBox("Button2",size(vec2(240,50)), color(Primary), coords(vec2(ScreenXY/2-120,ScreenXY/2+36)))
        createBox("Button3",size(vec2(240,50)), color(Primary), coords(vec2(ScreenXY/2-120,ScreenXY/2+86)))
        
        createBox("Row1",size(vec2(240,2)), color(Light), coords(vec2(ScreenXY/2-120,ScreenXY/2+35)))
        createBox("Row2",size(vec2(240,2)), color(Light), coords(vec2(ScreenXY/2-120,ScreenXY/2+85)))
        
        createText("Profile",size(16),align(1),coords(vec2(ScreenXY/2,ScreenXY/2-30)))
        createText("Text1",size(20),align(1),coords(vec2(ScreenXY/2+15,ScreenXY/2)))
        createText("Text2",size(20),align(1),coords(vec2(ScreenXY/2+15,ScreenXY/2+50)))
        createText("Text3",size(20),align(1),coords(vec2(ScreenXY/2+15,ScreenXY/2+100)))
        
        createMaterial("Icon1", size(vec2(20,20)), coords(vec2(ScreenXY/2-75,ScreenXY/2)), 
        "materials/underground/cash.png")
        createMaterial("Icon2", size(vec2(20,20)), coords(vec2(ScreenXY/2-75,ScreenXY/2+50)), 
        "zerochain/zerolib/gameicons/lockedchest.png")
        createMaterial("Icon3", size(vec2(20,20)), coords(vec2(ScreenXY/2-75,ScreenXY/2+100)), 
        "materials/porky/wallet.png")
        
        
        EGP:egpSetText(Elements:get("Profile"),"Profile: " + formatName(Profile:name(), 20))
        EGP:egpSetText(Elements:get("Text1"),"Pay Someone")
        EGP:egpSetText(Elements:get("Text2"),"Check Storage")
        EGP:egpSetText(Elements:get("Text3"),"Request Loan")
        
        createBox("Back1",size(vec2(240,50)), color(Primary), coords(vec2(ScreenXY/2-120,ScreenXY/2+150)))
        createText("< Back",size(20),align(1),coords(vec2(ScreenXY/2,ScreenXY-90)))
    }
    
    function drawContract(Button) {
        background()
        local Name = formatName(Profile:name(), 20)
        local Date = dateUTC()
        local DateFormat = toString(Date["day", number])+"/"+toString(Date["month", number])+"/"+toString(Date["year", number])
        createText("Depository Contract",size(30),align(1),coords(vec2(ScreenXY/2,10)))
        createTextLayout("Contract", size(vec2(ScreenXY-80,ScreenXY)), color(Light), align(0), coords(vec2(40,50)))
        
        local ID = Elements:get("Contract")
        EGP:egpSetText(ID,
        "This agreement between "+Name+" and "+BankName+" is hereby entered into on this date: "+DateFormat+".
        \nPurpose: "+BankName+" and "+Name+" will be entering into storage operations involving "+BankName+"'s establishment, which require "+Name+" to abide by the following regulations. 
        \n"+Name+" hereby agrees to the following:
        \n1. Confidential information related to other client's storage and/or account may not be shared.
        \n2. "+BankName+" has the right to claim ownership of items left in unpaid accounts after 15 minutes. 
        \n3. To abide by the listed KOS rules. 
        \n4. Engaging in theft or any act of stealing is strictly prohibited within the premises.
        \nViolation of these provisions shall result in immediate termination of this contract.
        ")
        EGP:egpSize(ID, 17)
        createBox("Back1",size(vec2(80,40)), color(Primary), coords(vec2(30,ScreenXY-60)))
        createText("< Back",size(20),align(1),coords(vec2(70,ScreenXY-50)))
        if(Button) {
            createBox("Okay1",size(vec2(80,40)), color(Primary), coords(vec2(ScreenXY-110,ScreenXY-60)))
            createText("Okay >",size(20),align(1),coords(vec2(ScreenXY-65,ScreenXY-50)))
        }
    }
    
    function drawLoan() {
        background()
        local Name = formatName(Profile:name(), 20)
        createText(BankName+" Loaning System",size(30),align(1),coords(vec2(ScreenXY/2,10)))
        createText("I, "+formatName(Name, 16)+" acknowledge my obligations to: ", size(20),align(1),coords(vec2(ScreenXY/2,50)))
        
        createCheckBox("Use funds for their intended purpose.", size(vec2(40,20)),  coords(vec2(ScreenXY/8,100)))
        createCheckBox("Repay loan instalments on a regular basis.", size(vec2(40,20)),  coords(vec2(ScreenXY/8,140)))
        createCheckBox("Use the loan within the "+BankName+"'s establishment", size(vec2(40,20)),  coords(vec2(ScreenXY/8,180)))
        
        createDropdown("Select Job:", size(vec2(ScreenXY / 4+50, 25)), coords(vec2(ScreenXY/8,220)))
        createDropdown("Select Reason:", size(vec2(ScreenXY / 4+60, 25)), coords(vec2(ScreenXY/2-50 + ScreenXY/8,220)))
        
        createText("Loan Amount: $0", size(18), align(1), coords(vec2(ScreenXY/2,370)))
        createSlider("Loan", size(vec2(ScreenXY / 2, 20)), coords(vec2(ScreenXY / 4,390)))
        
        createBox("Back1", size(vec2(80,40)), color(Primary), coords(vec2(30,ScreenXY-60)))
        createText("< Back", size(20),align(1),coords(vec2(70,ScreenXY-50)))
        createBox("RequestButton", size(vec2(110,40)), color(Primary), coords(vec2(ScreenXY-140,ScreenXY-60)))
        createText("Request >", size(20),align(1),coords(vec2(ScreenXY-80,ScreenXY-50)))
    }
    
    function drawPay() {
        background()
        local Name = formatName(Profile:name(), 20)
        createText(BankName+" Payment System",size(30),align(1),coords(vec2(ScreenXY/2,10)))
        createText("You can pay anyone on the map with a (0%) fee.", size(20),align(1),coords(vec2(ScreenXY/2,50)))
        
        createDropdown("Select Player:", size(vec2(ScreenXY/2, 25)), coords(vec2(ScreenXY/4,120)))
        
        createBox("PayBox", size(vec2(150,40)), color(Primary), coords(vec2(ScreenXY/2-75,ScreenXY/2+50)))
        createText("Pay by chat", size(20),align(1),coords(vec2(ScreenXY/2,ScreenXY/2+50+8)))
        
        createText("Pay Amount: $0", size(18), align(1), coords(vec2(ScreenXY/2,370)))
        createSlider("Pay", size(vec2(ScreenXY / 2, 20)), coords(vec2(ScreenXY / 4,390)))
        
        createBox("Back1", size(vec2(80,40)), color(Primary), coords(vec2(30,ScreenXY-60)))
        createText("< Back", size(20),align(1),coords(vec2(70,ScreenXY-50)))
        createBox("PayButton", size(vec2(110,40)), color(Primary), coords(vec2(ScreenXY-140,ScreenXY-60)))
        createText("Pay >", size(20),align(1),coords(vec2(ScreenXY-80,ScreenXY-50)))
    }
    
    function drawBooking() {
        background()
        
        #Booking Table
        createBox("TableBackground", size(vec2(ScreenXY-60,50)), color(White), coords(vec2(30,40)))
        #createBox("Header", size(vec2(ScreenXY-60,41)), color(Secondary), coords(vec2(30,10)))
        createText("Storage Type", size(16),coords(vec2(40,20)))
        createText("Size", size(16),coords(vec2(220,20)))
        createText("Price/Hour*", size(16),coords(vec2(285,20)))
        createText("Availability", size(16),coords(vec2(402.5,20)))
        
        #Columns
        createBox("Column1", size(vec2(3,90)), color(Dark), coords(vec2(210-1,42)))
        createBox("Column2", size(vec2(3,90)), color(Dark), coords(vec2(255-1,42)))
        createBox("Column3", size(vec2(3,90)), color(Dark), coords(vec2(390-1,42)))
        
        createBox("Back1", size(vec2(80,40)), color(Primary), coords(vec2(30,ScreenXY-60)))
        createText("< Back", size(20),align(1),coords(vec2(70,ScreenXY-50)))
    }
    
    function drawMembership(Customer:table, Taxes:string, Price) {
        background()
        if (Customer:count()) {
            local Name = formatName(Customer["Name", string], 20)
            local Membership = Customer["Membership", string]
            local Centre = ScreenXY/2
            local XLeft = ScreenXY/2-ScreenXY/4
            local XRight = ScreenXY/2+ScreenXY/4
            createText("Memberships", size(40), color(Light), align(1), coords(vec2(Centre,20)))
            createTextLayout("Welcome", size(vec2(ScreenXY-ScreenXY/4,250)), color(Light), align(1), coords(vec2(ScreenXY/8,80)))
            EGP:egpSetText(Elements:get("Welcome"),
            "Hi " + Name + ", welcome to " + BankName + "'s membership system. Each level of membership corresponds to a tax level.
            \nThe current tax settings are:\n\n " + Taxes)
            
            createText("CurrentMembership", size(20), color(Light), align(1), coords(vec2(Centre,325)))
            EGP:egpSetText(Elements:get("CurrentMembership"), Name + ": " + Membership + " member")
            
            createText("Price", size(20), color(Light), align(1), coords(vec2(Centre,405)))
            EGP:egpSetText(Elements:get("Price"), "Current Price: $" + formatNumber(Price))
            
            
            createBox("Purchase",size(vec2(240,50)), color(Primary), coords(vec2(ScreenXY/2-120,350)))
            createText("Upgrade Membership",size(20),align(1),coords(vec2(ScreenXY/2,365)))
            
            if (Membership == "staff" || Membership == "diamond") {
                EGP:egpSetText(Elements:get("Upgrade Membership"), "Max Tier Reached")
            }
            
            createBox("Back1", size(vec2(80,40)), color(Primary), coords(vec2(30,ScreenXY-60)))
            createText("< Back", size(20),align(1),coords(vec2(70,ScreenXY-50)))
            createBox("Contract1",size(vec2(95,40)), color(Primary), coords(vec2(ScreenXY-115,ScreenXY-60)))
            createText("Contract",size(20),align(1),coords(vec2(ScreenXY-65,ScreenXY-50)))
        }
        else {
            logo()
            createTextLayout("Error", size(vec2(ScreenXY/2,ScreenXY/2)), color(Light), align(1), coords(vec2(ScreenXY/2-ScreenXY/4,ScreenXY/2)))
            EGP:egpSetText(Elements:get("Error"), "Please purchase a vault to start a " + BankName + " account.")
        }
    }
    
    function drawStorage(Customer:table, CurrentDate:string, Tax) {
        background()
        if (Customer:count()) {
            local Name = Customer["Name", string]
            local SessionProfit = Customer["Profit", table][CurrentDate, number]
            local Tenure = Customer["Tenure", string]
            local TotalProfit = Customer["Profit", table]["Total", number]
            local Membership = Customer["Membership", string]
            local Printers = Customer["Printers", table][CurrentDate, array]
            local Items = Customer["Items", table][CurrentDate, array]
            
            local Centre = ScreenXY/2
            local XLeft = ScreenXY/2-ScreenXY/4
            local XRight = ScreenXY/2+ScreenXY/4
            createText("Name", size(40), color(Light), align(1), coords(vec2(Centre,20)))
            createText("Membership", size(20), color(Light), align(1), coords(vec2(Centre,55)))
            
            createText("Tenure", size(20), color(Light), align(0), coords(vec2(XLeft - 80,100)))
            createText("Total Profit", size(20), color(Light), align(0), coords(vec2(XLeft - 80,130)))
            createText("Profit", size(20), color(Light), align(0), coords(vec2(XLeft - 80,160)))
             
            createText("Perks", size(25), color(Light), align(1), coords(vec2(XRight+15,80)))
            createText("AutoPay", size(20), color(Light), align(0), coords(vec2(XRight,110)))
            createText("Taxcut", size(20), color(Light), align(0), coords(vec2(XRight,130)))
            createText("Insurance", size(20), color(Light), align(0), coords(vec2(XRight,150)))
            
            local Perk2 = 0
            local Perk3 = 0
            if (Tax < 25) {Perk2 = 1}
            if (Tax < 15) {Perk3 = 1}
            createTick("Tick1", vec2(15,15), coords(vec2(XRight-30,115)), 1)
            createTick("Tick2", vec2(15,15), coords(vec2(XRight-30,135)), Perk2)
            createTick("Tick3", vec2(15,15), coords(vec2(XRight-30,155)), Perk3)
            
            createText("Storage", size(30), color(Light), align(1), coords(vec2(Centre,200)))
            
            createText("Printers", size(20), color(Light), align(1), coords(vec2(XLeft,230)))
            createText("Items", size(20), color(Light), align(1), coords(vec2(XRight,230)))
            
            
            createBox("CollectBG", size(vec2(220,180)), color(Light), coords(vec2(XLeft-100,265)))
            createBox("ItemsBG", size(vec2(220,180)), color(Light), coords(vec2(XRight-120,265)))
            
            if (Customer["DisableCollect", number]) {
                createCheckBox("Auto-collect", size(vec2(40,20)),  coords(vec2(ScreenXY/2-50,455)), 0)
            }
            else {
                createCheckBox("Auto-collect", size(vec2(40,20)),  coords(vec2(ScreenXY/2-50,455)), 1)
            }
            
            local PTable = table()
            for (I=1, Printers:count()) {
                local Printer = Printers[I, string]
                local Name = Printer[9]:upper() + Printer:sub(10)
                if (PTable:exists(Name)) {
                    PTable[Name, number] = PTable[Name, number] + 1
                }
                else {
                    PTable[Name, number] = 1
                    createPrinterIcon("Printer"+I, coords(vec2(XLeft-75,289+(PTable:count()-1)*20)))
                }
            }
            local ITable = table()
            for (I=1, Items:count()) {
                local Item = Items[I, string]
                local Name = formatName(Item[1]:upper() + Item:sub(2):replace("_", " "), 14)
                if (ITable:exists(Name)) {
                    ITable[Name, number] = ITable[Name, number] + 1
                }
                else {
                    ITable[Name, number] = 1
                    createMaterial("Icon"+I, size(vec2(20,20)), coords(vec2(XRight-100,287+(ITable:count()-1)*20)), 
                    "materials/underground/crate.png")
                    EGP:egpColor(Elements:get("Icon"+I), Dark)
                }
            }
            
            createTextLayout("PrinterNames", size(vec2(200,160)), color(Dark), align(0), coords(vec2(XLeft-35,285)))
            local Text = Elements:get("PrinterNames")
            EGP:egpSetText(Text, PTable:keys():string())
            EGP:egpSize(Text, 20)
            
            createTextLayout("PrinterAmounts", size(vec2(200,160)), color(Dark), align(0), coords(vec2(XLeft+90,285)))
            local Text = Elements:get("PrinterAmounts")
            EGP:egpSetText(Text, PTable:values():string())
            EGP:egpSize(Text, 20)
            
            createTextLayout("ItemNames", size(vec2(200,160)), color(Dark), align(0), coords(vec2(XRight-70,285)))
            local Text = Elements:get("ItemNames")
            EGP:egpSetText(Text, ITable:keys():string())
            EGP:egpSize(Text, 20)
            
            createTextLayout("ItemAmounts", size(vec2(200,160)), color(Dark), align(0), coords(vec2(XRight+70,285)))
            local Text = Elements:get("ItemAmounts")
            EGP:egpSetText(Text, ITable:values():string())
            EGP:egpSize(Text, 20)
            
            
            EGP:egpSetText(Elements:get("Name"), formatName(Name, 16))
            EGP:egpSetText(Elements:get("Membership"), Membership + " member")
            EGP:egpSetText(Elements:get("Tenure"), "Date joined: " + Tenure)
            EGP:egpSetText(Elements:get("Total Profit"), "Total Profit: $" + formatNumber(TotalProfit))
            EGP:egpSetText(Elements:get("Profit"), "Session Profit: $" + formatNumber(SessionProfit))
        }
        else {
            logo()
            createTextLayout("Error", size(vec2(ScreenXY/2,ScreenXY/2)), color(Light), align(1), coords(vec2(ScreenXY/2-ScreenXY/4,ScreenXY/2)))
            EGP:egpSetText(Elements:get("Error"), "Please purchase a vault to view storage.")
        }
        createBox("Back1", size(vec2(80,40)), color(Primary), coords(vec2(30,ScreenXY-60)))
        createText("< Back", size(20),align(1),coords(vec2(70,ScreenXY-50)))
    }
    
    function drawLoading() {
        background()
        logo()
        for (I=1,12) {
            createRoundedBox("Loading"+I, size(vec2(5,15)), color(Light), coords(vec2(ScreenXY/2,ScreenXY/2)))
            local ID = Elements:get("Loading"+I)
            EGP:egpAngle(ID,vec2(ScreenXY/2,ScreenXY/2+50),vec2(-2.5,15),(I-1)*30)
            EGP:egpAlpha(ID,255-(I-1)*21.25)
        }
    }
    
    function drawToDo() {
        background()
        logo()
        createText("To DO", size(16),align(1),coords(vec2(ScreenXY/2,ScreenXY/2-30)))
        
        createBox("Back1", size(vec2(80,40)), color(Primary), coords(vec2(ScreenXY/2-40,ScreenXY-100)))
        createText("< Back", size(20),align(1),coords(vec2(ScreenXY/2,ScreenXY-90)))
    }
    
    #-------- Admin Screens ---------#
    function drawAdminInitial(Alpha) {
        background()
        logo()
        
        #Welcome text
        createText("Welcome",size(20),align(1),coords(vec2(ScreenXY/2,ScreenXY/2+60)), Alpha)
        createText("Press [E] to start",size(18),align(1),coords(vec2(ScreenXY/2,ScreenXY/2+90)), Alpha)
        EGP:egpSetText(Elements:get("Welcome"), BankName + "'s Admin Panel")
    }
    
    function drawAdminPanel(Alpha, Keys) {
        local Page = Screen-2
        background()
        #Total Profit Made
        createText("Admin Panel",size(30),align(1),coords(vec2(ScreenXY/2,20)))
        
        if (Page > 1) {
            createBox("BackButton", size(vec2(80,40)), color(Primary), coords(vec2(30,ScreenXY-60)))
            createText("< Prev", size(20),align(1),coords(vec2(70,ScreenXY-50)))
        }
        if (Page * 6 < Keys) {
            createBox("NextButton", size(vec2(80,40)), color(Primary), coords(vec2(ScreenXY-110,ScreenXY-60)))
            createText("Next >", size(20),align(1),coords(vec2(ScreenXY-67,ScreenXY-50)))
        }
        
        createText("Page",size(16),align(1),coords(vec2(ScreenXY/2,ScreenXY-50)))
        EGP:egpSetText(Elements:get("Page"), "Page: "+toString(Page))
    }
    
    function drawUserInfo(I, Name:string, Membership:string, Profit, Items) {
        local X = 36
        local Y = 70+I*53
        local TxtOffset = 13
        createBox("UserBG"+I, size(vec2(440,50)), color(Light), coords(vec2(X,Y)))
        createBox("NameBG"+I, size(vec2(440,50)), color(Light), coords(vec2(X,Y)))
        createText("Name"+I, size(20), color(Dark), align(0), coords(vec2(X + 20, Y + TxtOffset)))
        createText("Profit"+I, size(20), color(Dark), align(0), coords(vec2(X + 180, Y + TxtOffset)))
        createText("Storage"+I, size(20), color(Dark), align(0), coords(vec2(X + 340, Y + TxtOffset)))
        EGP:egpSetText(Elements:get("Name"+I), formatName(Name, 16))
        EGP:egpSetText(Elements:get("Profit"+I), "$"+formatNumber(Profit)+" ("+Membership+")")
        EGP:egpSetText(Elements:get("Storage"+I), "Printers: "+Items)
    }
    
    #-------- Calc Screens ---------#
    function drawCalcInitial(Alpha) {
        background()
        logo()
        
        #Welcome text
        createText("Welcome",size(20),align(1),coords(vec2(ScreenXY/2,ScreenXY/2+60)), Alpha)
        createText("Press [E] to start",size(18),align(1),coords(vec2(ScreenXY/2,ScreenXY/2+90)), Alpha)
        EGP:egpSetText(Elements:get("Welcome"), BankName + "'s Printer Calculator")
    }
    
    function drawCalcSettings() {
        background()
        createText("Before we begin...",size(30),align(1),coords(vec2(ScreenXY/2,20)))
        createCheckBox("Do you want auto-collect enabled?", size(vec2(40,20)),  coords(vec2(ScreenXY/4-30,100)))
        createTextLayout("FAQ", size(vec2(400,300)), color(Light), align(0), coords(vec2(ScreenXY/8,150)))
        local ID = Elements:get("FAQ")
        EGP:egpSetText(ID, "Auto-collect is when bank employees collect your printers for you, with a small tax. The percentage of tax depends on your membership tier (this is automatically applied).
        \nYou can also collect your printers yourself, select your TAU tier (leave as default if you don't know) if you have purchased TAU levels.
        \nSpecial thanks to FatAfricanKid for collecting all of the data. <3")
        
        createBox("BackButton", size(vec2(80,40)), color(Primary), coords(vec2(30,ScreenXY-60)))
        createText("< Exit", size(20),align(1),coords(vec2(70,ScreenXY-50)))
        createBox("NextButton", size(vec2(80,40)), color(Primary), coords(vec2(ScreenXY-110,ScreenXY-60)))
        createText("Next >", size(20),align(1),coords(vec2(ScreenXY-67,ScreenXY-50)))
        
    }
    
    function drawCalculator(AutoCollect) {
        local XRight = ScreenXY/2+ScreenXY/4
        local XLeft = ScreenXY/2-ScreenXY/4
        local Printers = table(
        array("Basic",  "Advanced"),
        array("Tier 3", "Tier 4"),
        array("VIP",    "VIP+"),
        array("Epic",   "Legendary"))
        background()
        #Total Profit Made
        createText("Return on Investment",size(30),align(1),coords(vec2(ScreenXY/2,20)))
        createText("Selection",size(25),align(1),coords(vec2(ScreenXY/4,60)))
        createText("Printers",size(25),align(1),coords(vec2(ScreenXY/2+ScreenXY/4,60)))
        
        for (A=1, 4) {
            for(B=1, 2) {
                local X = ScreenXY/16+(B-1)*107
                local Y = 100+(A-1)*58
                local Name = Printers[A, array][B, string]
                createBox("Printer"+A+B, size(vec2(100,50)), color(Primary), coords(vec2(X,Y)))
                createText(Name, size(18), align(1), coords(vec2(X+50, Y+16)))
            }
        }
        
        if (!AutoCollect) { 
            createDropdown("TAU Tier:", size(vec2(ScreenXY/4+80, 25)), coords(vec2(ScreenXY/16,330)))
        }
        
        createBox("ClearBox", size(vec2(220,38)), color(Primary), coords(vec2(XRight-120,285)))
        createText("Clear",size(20),align(1),coords(vec2(XRight,293)))
        
        createBox("CalcBox", size(vec2(208,50)), color(Primary), coords(vec2(ScreenXY/16,360)))
        createText("Calculate",size(20),align(1),coords(vec2(XLeft+5,375)))
        
        createText("Cost:",size(18),align(0),coords(vec2(XRight-120,340)))
        createText("Profit/hr:",size(18),align(0),coords(vec2(XRight-120,365)))
        createText("ROI:",size(18),align(0),coords(vec2(XRight-120,390)))
        
        createText("ROI = Time for printers to make their cost back",size(18),align(1),coords(vec2(ScreenXY/2,420)))
        
        
        createBox("PrintersBG", size(vec2(220,180)), color(Light), coords(vec2(XRight-120,100)))
        
        createBox("BackButton", size(vec2(80,40)), color(Primary), coords(vec2(30,ScreenXY-60)))
        createText("< Back", size(20),align(1),coords(vec2(70,ScreenXY-50)))

        
    }
}

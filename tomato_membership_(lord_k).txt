@name Tomato Membership (Lord K)
# Automagically Compiled via https://egpcompiler.com (Credits Odin & Bob Tomato)

#include "lib/tomato/1.0/tomato_db"
#include "lib/tomato/1.0/tomato_ui"

function clearButtons() {
    EGP:egpRemove(Elements:get("InfoBG"))
    EGP:egpRemove(Elements:get("CurrentRank"))
    EGP:egpRemove(Elements:get("Info"))
    EGP:egpRemove(Elements:get("InfoTitle"))
    EGP:egpRemove(Elements:get("Upgrade"))
}

function start() {
    clearButtons()
    text("StartText", table("text"="Press E to start", "x"=176.0, "y"=296.0, "w"= 155.0, "h"=87.0, "r"=255, "g"=255, "b"=255, "size"=23, "halign"=1, "valign"=1))
    box("Start", table("a"=0, "x"=0, "y"=0, "w"=512.0, "h"=512.0, "r"=29, "g"=29, "b"=29, "radius"=0))
}

function menu(Response:table) {
    const Rank = Response["Rank", string]
    const Ranks = DB["Settings", table]["Ranks", array]
    const MaxRank = Ranks[Ranks:count(), string]
    box("InfoBG", table("x"=132.0, "y"=238.0, "w"=245.0, "h"=36.0, "r"=217, "g"=217, "b"=217, "radius"=0))
    text("CurrentRank", table("text"="Your current rank: " + Rank, "x"=136.0, "y"=389.0, "w"= 240.0, "h"=40.0, "r"=255, "g"=255, "b"=255, "size"=19, "halign"=1, "valign"=1)) 
    text("Info", table("x"=126.0, "y"=274.0, "w"= 256.0, "h"=84.0, "r"=217, "g"=217, "b"=217, "size"=19, "halign"=1, "valign"=1,
        "text"="Pringle: Default tax bracket\nVIP: 15% discount\nVIP+: 10% discount"
    ))
    text("InfoTitle", table("text"="Affiliated OCP Stores", "x"=133.0, "y"=238.0, "w"= 243.0, "h"=36.0, "r"=29, "g"=29, "b"=29, "size"=23, "halign"=1, "valign"=1))
    
    box("Upgrade", table("x"=136.0, "y"=429.0, "w"=240.0, "h"=59.0, "r"=217, "g"=217, "b"=217, "radius"=0))
    text("UpgradeText", table("text"=Rank == MaxRank ? "Max Rank" : "Upgrade Rank", "x"=136.0, "y"=429.0, "w"= 240.0, "h"=59.0, "r"=29, "g"=29, "b"=29, "size"=19, "halign"=1, "valign"=1))
}

if (initial()) {
    box(table("x"=0, "y"=0, "w"=512.0, "h"=512.0, "r"=29, "g"=29, "b"=29, "radius"=0))
    box("Logo", table("x"=174.0, "y"=13.0, "w"=160.0, "h"=154.0, "r" = 255, "g" = 255, "b" = 255, "radius"=0, 
    "material"="../data/tau/cache/files/1a2b6f5882d9172b7409131e3b465a73.png"))
    start()
    loadDB("OmniConsumerProducts")
    Prefix = "OmniConsumerProducts"
    
    if (!DB["Settings", table]["UpgradePrice", number]) {# Initial settings
        DB["Settings", table]["UpgradePrice", number] = 100000
    }
    if (!DB["Settings", table]["Ranks", array]:count()) {
        DB["Settings", table]["Ranks", array] = array("Pringle", "VIP", "VIP+")
    }
    DB["Structure", function] = function(PlayerToSave:entity) {
        const Player = table(
            "Steam" = PlayerToSave:steamID64(),
            "Name" = PlayerToSave:name(),
            "Rank" = "Pringle",
            "Tenure"=getDate()
        )
        return Player
    }
    DB["OnResponse", function] = function() {
        stopSpinner("TheSpinner")
        if (isPlayerNearby(CurrentUser, 100)) {
            timer(1, function() {
                menu(DB["Response", table])
            })
        }
    }
    
    chat("loadplayer", function(Args:array) {
            let Player = Args[1, string]:findPlayer()
            if (Player:isValid()) {
                loadPlayer(Player)
                timer(1, function() {
                    print(DB["Players",table][Player:steamID64(), table]:toString())
                })
            }
        },
    owner())
    chat("price", function(Args:array) {
            let Price = Args[1, string]:toNumber()
            if (Price) {
                DB["Settings", table]["UpgradePrice", number] = Price
                owner():msg("Changed upgrade price to: $" + abbreviateNum(Price)) 
            }
        },
    owner())
    
    tauPrecacheMaterial("2431737")
}

function string getNextRank(Entity:entity) {
    let Ranks = DB["Settings", table]["Ranks", array]
    let Player = DB["Players", table][Entity:steamID64(), table]
    let Rank = Player["Rank", string]
    let Index = Ranks:indexOf(Rank)
    return Ranks[Index + 1, string]
}

if(moneyClk()) {
    let Player = moneyClkPlayer()
    let NextRank = getNextRank(Player)
    let PlayerData = DB["Players", table][Player:steamID64(), table]
    PlayerData["Rank", string] = NextRank
    Player:msg("Thank you for your purchase")
    Player:msg("You are now " + NextRank)
    menu(PlayerData)
    saveDB()
}

if(userInput()) {
    let Cursor = cursorObj()
    switch (Cursor) {
        case "Start",
            EGP:egpRemove(Elements:get("Start"))
            EGP:egpRemove(Elements:get("StartText"))
            loadingSpinner("TheSpinner", table("coords"=vec2(256,320), "size"=12))
            loadPlayer(CurrentUser)
            timer("input", 1, 0, function() {
                if(!isPlayerNearby(CurrentUser, 100)) {
                    stoptimer("input")
                    start()
                    stopSpinner("TheSpinner")
                }
            })
        break
        case "Upgrade",
            const Text = EGP:egpobject(Elements:get("UpgradeText"))["text", string]
            if (Text != "Max Rank") {
                let NextRank = getNextRank(CurrentUser)
                moneyRequest(CurrentUser,DB["Settings", table]["UpgradePrice", number], "Upgrade to " + NextRank)
            }
        break
    }
}

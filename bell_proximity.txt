@name Bell Proximity
@model models/props/de_inferno/bell_small.mdl
@persist LastUse:number PlayersInRange:table
@trigger none
@strict

function array findPlayers(Radius:number) {
    if(findCanQuery()) {
        findIncludeClass("player")
        findInSphere(entity():pos(), Radius)
        return findToArray()
    }
    return array()
}

function void checkPlayers() {
    local Radius = 150
    local Origin = entity():pos()
    local CurrentPlayers = findPlayers(Radius)  # All players on the server
    local PresentIDs = table()

    for (I = 1, CurrentPlayers:count()) {
        local P = CurrentPlayers[I, entity]
        if (!P:isAlive()) { continue }

        local ID = P:steamID()
        local Dist = P:pos():distance(Origin)

        if (Dist <= Radius) {
            PresentIDs[ID, number] = 1

            if (!PlayersInRange:exists(ID)) {
                PlayersInRange[ID, number] = 1
                entity():emitSound("death_bell.wav", 75, 100, 1)
            }
        }
    }

    # Remove players who are no longer in range
    foreach (_:number, ID:string = PlayersInRange) {
        if (!PresentIDs:exists(ID)) {
            PlayersInRange:remove(ID)
        }
    }
}

if (first() || dupefinished()) {
    LastUse = 0
    PlayersInRange = table()
    
    timer(1, 0, function() {
        checkPlayers()
    })
}
